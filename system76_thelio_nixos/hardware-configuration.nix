# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "uas" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "rpool/nixos/root";
      fsType = "zfs"; options = [ "zfsutil" "X-mount.mkdir" ];
    };

  fileSystems."/home" =
    { device = "rpool/nixos/home";
      fsType = "zfs"; options = [ "zfsutil" "X-mount.mkdir" ];
    };

  fileSystems."/var/lib" =
    { device = "rpool/nixos/var/lib";
      fsType = "zfs"; options = [ "zfsutil" "X-mount.mkdir" ];
    };

  fileSystems."/var/log" =
    { device = "rpool/nixos/var/log";
      fsType = "zfs"; options = [ "zfsutil" "X-mount.mkdir" ];
    };

  fileSystems."/boot" =
    { device = "bpool/nixos/root";
      neededForBoot = true;
      fsType = "zfs"; options = [ "zfsutil" "X-mount.mkdir" ];
    };

  fileSystems."/boot/efis/ata-WDC_WD101FZBX-00ATAA0_VCKR0ALP-part1" =
    { device = "/dev/disk/by-uuid/4144-CE86";
      fsType = "vfat";
    };

  fileSystems."/boot/efis/ata-WDC_WD101FZBX-00ATAA0_VCKR0UGP-part1" =
    { device = "/dev/disk/by-uuid/4146-2DD7";
      fsType = "vfat";
    };

  fileSystems."/boot/efi" =
    { device = "/boot/efis/ata-WDC_WD101FZBX-00ATAA0_VCKR0ALP-part1";
      fsType = "none";
      options = [ "bind" ];
    };

  # to get both flatpak steam and native steam to use the same directory
  fileSystems."/home/pmarreck/.var/app/com.valvesoftware.Steam/.local/share/Steam" = {
    device = "/home/pmarreck/.local/share/Steam";
    options = [ "bind" ];
  };

  swapDevices = [ 
    { device = "/dev/disk/by-uuid/88801519-1d48-4572-9435-1598b75402c7"; }
    { device = "/dev/disk/by-uuid/e9ea414c-dce0-4a50-8d52-4eeda6519e5b"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp68s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
